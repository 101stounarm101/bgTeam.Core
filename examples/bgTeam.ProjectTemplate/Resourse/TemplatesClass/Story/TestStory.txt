namespace $namespace$
{
    using System.Threading.Tasks;
    using bgTeam;
    using bgTeam.DataAccess;
    using $prj$.Domain.Entities;

    public class TestStory : IStory<TestStoryContext, bool>
    {
        private readonly IAppLogger _logger;
        // private readonly IEntityFrameworkRepository _repository;

        public TestStory(
            IAppLogger logger,
            IRepository repository,
            ICrudService crudService)
        {
            _logger = logger;
            // _crudService = crudService;
        }

        public bool Execute(TestStoryContext context)
        {
            return ExecuteAsync(context).Result;
        }

        public async Task<bool> ExecuteAsync(TestStoryContext context)
        {
            //var user = await _userManager.FindByIdAsync(context.UserId);
            //await _crudService.ExecuteAsync("if not exists (select * from sysobjects where name='Product' and xtype='U') CREATE TABLE Product (Id INT NOT NULL IDENTITY(1,1), Name varchar(255) NOT NULL)");

            //await _crudService.ExecuteAsync(@"INSERT INTO Product(Name) values ('Producte 1');");

            //await _crudService.InsertAsync(new Test() { Name = "Producte 2" });

            return true;

        }
    }
}
